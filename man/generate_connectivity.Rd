% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{generate_connectivity}
\alias{generate_connectivity}
\title{Generate connectivity matrix}
\usage{
generate_connectivity(images.df, threshold, type.column, unique.types)
}
\arguments{
\item{images.df}{A data.frame containing the image information. See details.}

\item{threshold}{Radius to generate connectivity for}

\item{type.column}{The name of the column in \code{images.df} that contains the cell types}

\item{unique.types}{Vector of unique cell types in the \code{type.column}}
}
\value{
Returns a connectivity matrix of dimension \eqn{n\times n} where \eqn{n}
is the number of cell types, i.e. the length of \code{unique.types}
}
\description{
Based on the radius with the lowest TopKAT p-value, compute a connections
matrix that shows how many edges are between cells of each type at the
simplicial complex constructed based on this radius.
}
\details{
\code{images.df} should contain a \code{PID} column indicating which sample
each image corresponds to. It should also contain columns \code{x} and \code{y} indicating
the location of each cell. Each row in \code{images.df} corresponds to a cell within
each image. See the package vignettes for an example of the structure.

This function may take several minutes to run and does require
a substantial amount of memory. If the memory limit is reached, consider
running \code{mem.maxVSize(vsize = x)} and specify \code{x} to a large value.
}
\examples{
require(magrittr)
conmat <- generate_connectivity(data1.df \%>\% dplyr::filter(PID == 1), threshold = 10,
                                type.column = "type", unique.types = unique(data1.df$type))
}
